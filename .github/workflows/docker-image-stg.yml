name: Build & Push Staging Docker Image

on:
  push:
  pull_request:
    branches: [master, main]

jobs:

  lint:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

  sonar:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: [sonar]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPO }}-stg
    - name: Build the second Docker image
      run: docker build . --file Dockerfile-GCP --tag ${{ secrets.DOCKER_REPO2 }}-stg
    
    - name: Login to Docker Repository
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Push the Docker image with -stg tag
      run: docker push ${{ secrets.DOCKER_REPO }}-stg
    - name: Push the second Docker image with -stg tag
      run: docker push ${{ secrets.DOCKER_REPO2 }}-stg

    - name: Notify IRC Success
      run: |
        export COMMIT_MSG=$(git log -1 --pretty=%B)
        export NICK=$(head /dev/urandom | tr -dc A-Za-z | head -c 9 ; echo '')
        bash -c 'exec 3<>/dev/tcp/${{ secrets.IRC_SERVER }}/6667; echo -e "USER github_actions 0 * :GitHub Actions\nNICK $NICK\nJOIN ${{ secrets.IRC_CHANNEL }}" >&3; sleep 2; echo -e "PRIVMSG ${{ secrets.IRC_CHANNEL }} :\x0303,01Build of ${{ secrets.DOCKER_REPO }}:${{ github.SHA }}-stg && ${{ secrets.DOCKER_REPO2 }}:${{ github.SHA }}-stg completed successfully with commit message: "$COMMIT_MSG"\x03\nQUIT" >&3; cat <&3'
      if: success()

    - name: Notify IRC Failure
      run: |
        export COMMIT_MSG=$(git log -1 --pretty=%B)
        export NICK=$(head /dev/urandom | tr -dc A-Za-z | head -c 9 ; echo '')
        bash -c 'exec 3<>/dev/tcp/${{ secrets.IRC_SERVER }}/6667; echo -e "USER github_actions 0 * :GitHub Actions\nNICK $NICK\nJOIN ${{ secrets.IRC_CHANNEL }}" >&3; sleep 2; echo -e "PRIVMSG ${{ secrets.IRC_CHANNEL }} :\x0304,01Build of ${{ secrets.DOCKER_REPO }}:${{ github.SHA }}-stg && ${{ secrets.DOCKER_REPO2 }}:${{ github.SHA }}-stg failed with commit message: "$COMMIT_MSG"\x03\nQUIT" >&3; cat <&3'
      if: failure()